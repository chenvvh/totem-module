//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

&sk { release-after-ms = <1200>; };

/ {
    behaviors {
        comma: comma {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        period: period {
            compatible = "zmk,behavior-mod-morph";
            label = "PERIOD";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        question: question {
            compatible = "zmk,behavior-mod-morph";
            label = "QUESTION";
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp Q  &kp W  &kp E             &kp R         &kp T    &kp Y      &kp U            &kp I          &kp O    &kp P
                &kp A  &kp S  &kp D             &kp F         &kp G    &kp H      &kp J            &kp K          &kp L    &kp SINGLE_QUOTE
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C             &kp V         &kp B    &kp N      &kp M            &comma         &period  &question         &mo 2
                              &kp LEFT_CONTROL  &kp LEFT_GUI  &mo 1    &kp SPACE  &kp RIGHT_SHIFT  &kp RIGHT_ALT
            >;
        };

        nav_num {

            bindings = <
                   &kp LA(BACKSPACE)   &kp BACKSPACE  &kp UP          &kp DELETE     &kp LA(DELETE)        &kp N5       &kp N6    &kp N7      &kp N8    &kp N9
                   &kp LA(LEFT_ARROW)  &kp LEFT       &kp DOWN        &kp RIGHT      &kp LA(RIGHT)         &kp N0       &kp N1    &kp N2      &kp N3    &kp N4
&kp LG(BACKSPACE)  &kp LG(UP_ARROW)    &kp LG(LEFT)   &kp LEFT_SHIFT  &kp LG(RIGHT)  &kp LG(DOWN_ARROW)    &kp PERCENT  &kp PLUS  &kp MINUS   &kp STAR  &kp FSLH  &kp CARET
                                                      &trans          &trans         &trans                &kp EQUAL    &kp HASH  &kp DOLLAR
            >;
        };

        device {

            bindings = <
       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F1   &kp F2   &kp F3   &kp F4   &kp F5
       &none         &none         &none         &none         &bt BT_CLR      &kp F6   &kp F7   &kp F8   &kp F9   &kp F10
&none  &kp A         &none         &none         &none         &none           &kp F11  &kp F12  &kp F13  &kp F14  &kp F15  &none
                                   &none         &none         &none           &none    &none    &none
            >;
        };
        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };

        extra3 {
            status = "reserved";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
